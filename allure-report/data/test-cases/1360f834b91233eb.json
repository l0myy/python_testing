{
  "uid" : "1360f834b91233eb",
  "name" : "test_add_group[None:::]",
  "fullName" : "test.test_add_group.test_add_group[None#:]",
  "historyId" : "88e71eba3883d6b7c4faf1aa309967a5",
  "time" : {
    "start" : 1612814777748,
    "stop" : 1612814777748,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: Process unexpectedly closed with status 0",
  "statusTrace" : "request = <SubRequest 'app' for <Function test_add_group[None:::]>>\n\n    @pytest.fixture\n    def app(request):\n        global fixture\n        browser = request.config.getoption(\"--browser\")\n        web_config = load_config(request.config.getoption(\"--target\"))['web']\n        if fixture is None or not fixture.is_valid():\n>           fixture = Application(browser=browser, base_url=web_config[\"baseUrl\"])\n\nconftest.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nfixture\\application.py:12: in __init__\n    self.wd = webdriver.Firefox()\nenv\\lib\\site-packages\\selenium\\webdriver\\firefox\\webdriver.py:170: in __init__\n    RemoteWebDriver.__init__(\nenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:157: in __init__\n    self.start_session(capabilities, browser_profile)\nenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:252: in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\nenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000272613A9130>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"Process unexpectedly closed with status 0\",\"stacktrace\":\"\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: Process unexpectedly closed with status 0\n\nenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: WebDriverException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "stop",
    "time" : {
      "start" : 1612814777769,
      "stop" : 1612814777769,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "check_ui",
    "time" : {
      "start" : 1612814777749,
      "stop" : 1612814777749,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "db",
    "time" : {
      "start" : 1612814777750,
      "stop" : 1612814777768,
      "duration" : 18
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "app",
    "time" : {
      "start" : 1612814777769,
      "stop" : 1612814815952,
      "duration" : 38183
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: Process unexpectedly closed with status 0\n\n",
    "statusTrace" : "  File \"c:\\users\\trofimov-a\\pycharmprojects\\python_testing\\env\\lib\\site-packages\\pluggy\\callers.py\", line 187, in _multicall\n    res = hook_impl.function(*args)\n  File \"c:\\users\\trofimov-a\\pycharmprojects\\python_testing\\env\\lib\\site-packages\\_pytest\\fixtures.py\", line 1124, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"c:\\users\\trofimov-a\\pycharmprojects\\python_testing\\env\\lib\\site-packages\\_pytest\\fixtures.py\", line 930, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"C:\\Users\\trofimov-a\\PycharmProjects\\python_testing\\conftest.py\", line 28, in app\n    fixture = Application(browser=browser, base_url=web_config[\"baseUrl\"])\n  File \"C:\\Users\\trofimov-a\\PycharmProjects\\python_testing\\fixture\\application.py\", line 12, in __init__\n    self.wd = webdriver.Firefox()\n  File \"c:\\users\\trofimov-a\\pycharmprojects\\python_testing\\env\\lib\\site-packages\\selenium\\webdriver\\firefox\\webdriver.py\", line 170, in __init__\n    RemoteWebDriver.__init__(\n  File \"c:\\users\\trofimov-a\\pycharmprojects\\python_testing\\env\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 157, in __init__\n    self.start_session(capabilities, browser_profile)\n  File \"c:\\users\\trofimov-a\\pycharmprojects\\python_testing\\env\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 252, in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n  File \"c:\\users\\trofimov-a\\pycharmprojects\\python_testing\\env\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"c:\\users\\trofimov-a\\pycharmprojects\\python_testing\\env\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true
  } ],
  "afterStages" : [ {
    "name" : "stop::fin",
    "time" : {
      "start" : 1612814823854,
      "stop" : 1612814831893,
      "duration" : 8039
    },
    "status" : "broken",
    "statusMessage" : "urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='127.0.0.1', port=50455): Max retries exceeded with url: /session/5e452f64-3cc2-4f14-9abb-b55d61a20e23/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000027262510E80>: Failed to establish a new connection: [WinError 10061] Подключение не установлено, т.к. конечный компьютер отверг запрос на подключение'))\n",
    "statusTrace" : "  File \"c:\\users\\trofimov-a\\pycharmprojects\\python_testing\\env\\lib\\site-packages\\allure_commons\\_allure.py\", line 200, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"C:\\Users\\trofimov-a\\PycharmProjects\\python_testing\\conftest.py\", line 46, in fin\n    fixture.session.ensure_logout()\n  File \"C:\\Users\\trofimov-a\\PycharmProjects\\python_testing\\fixture\\session.py\", line 25, in ensure_logout\n    if self.is_logged_in():\n  File \"C:\\Users\\trofimov-a\\PycharmProjects\\python_testing\\fixture\\session.py\", line 30, in is_logged_in\n    return len(wd.find_elements_by_link_text(\"Logout\")) > 0\n  File \"c:\\users\\trofimov-a\\pycharmprojects\\python_testing\\env\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 444, in find_elements_by_link_text\n    return self.find_elements(by=By.LINK_TEXT, value=text)\n  File \"c:\\users\\trofimov-a\\pycharmprojects\\python_testing\\env\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 1005, in find_elements\n    return self.execute(Command.FIND_ELEMENTS, {\n  File \"c:\\users\\trofimov-a\\pycharmprojects\\python_testing\\env\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 319, in execute\n    response = self.command_executor.execute(driver_command, params)\n  File \"c:\\users\\trofimov-a\\pycharmprojects\\python_testing\\env\\lib\\site-packages\\selenium\\webdriver\\remote\\remote_connection.py\", line 374, in execute\n    return self._request(command_info[0], url, body=data)\n  File \"c:\\users\\trofimov-a\\pycharmprojects\\python_testing\\env\\lib\\site-packages\\selenium\\webdriver\\remote\\remote_connection.py\", line 397, in _request\n    resp = self._conn.request(method, url, body=body, headers=headers)\n  File \"c:\\users\\trofimov-a\\pycharmprojects\\python_testing\\env\\lib\\site-packages\\urllib3\\request.py\", line 78, in request\n    return self.request_encode_body(\n  File \"c:\\users\\trofimov-a\\pycharmprojects\\python_testing\\env\\lib\\site-packages\\urllib3\\request.py\", line 170, in request_encode_body\n    return self.urlopen(method, url, **extra_kw)\n  File \"c:\\users\\trofimov-a\\pycharmprojects\\python_testing\\env\\lib\\site-packages\\urllib3\\poolmanager.py\", line 375, in urlopen\n    response = conn.urlopen(method, u.request_uri, **kw)\n  File \"c:\\users\\trofimov-a\\pycharmprojects\\python_testing\\env\\lib\\site-packages\\urllib3\\connectionpool.py\", line 783, in urlopen\n    return self.urlopen(\n  File \"c:\\users\\trofimov-a\\pycharmprojects\\python_testing\\env\\lib\\site-packages\\urllib3\\connectionpool.py\", line 783, in urlopen\n    return self.urlopen(\n  File \"c:\\users\\trofimov-a\\pycharmprojects\\python_testing\\env\\lib\\site-packages\\urllib3\\connectionpool.py\", line 783, in urlopen\n    return self.urlopen(\n  File \"c:\\users\\trofimov-a\\pycharmprojects\\python_testing\\env\\lib\\site-packages\\urllib3\\connectionpool.py\", line 755, in urlopen\n    retries = retries.increment(\n  File \"c:\\users\\trofimov-a\\pycharmprojects\\python_testing\\env\\lib\\site-packages\\urllib3\\util\\retry.py\", line 573, in increment\n    raise MaxRetryError(_pool, url, error or ResponseError(cause))\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true
  }, {
    "name" : "db::fin",
    "time" : {
      "start" : 1612814831897,
      "stop" : 1612814831897,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_add_group"
  }, {
    "name" : "subSuite",
    "value" : "test_add_group[None"
  }, {
    "name" : "host",
    "value" : "TROFIMOV-NOTE"
  }, {
    "name" : "thread",
    "value" : "205360-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_add_group"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "json_groups",
    "value" : "None:::"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "1360f834b91233eb.json",
  "parameterValues" : [ "None:::" ]
}